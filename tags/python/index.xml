<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on JO Jaeyoung | 조재영</title>
    <link>https://jaese.github.io/tags/python/</link>
    <description>Recent content in python on JO Jaeyoung | 조재영</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jan 2022 14:58:44 +0000</lastBuildDate><atom:link href="https://jaese.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JAX API</title>
      <link>https://jaese.github.io/posts/hello-jax/</link>
      <pubDate>Sun, 23 Jan 2022 14:58:44 +0000</pubDate>
      
      <guid>https://jaese.github.io/posts/hello-jax/</guid>
      <description>Google&amp;rsquo;s JAX autograd library is an example of a neat, composable API. The following is all that is needed to plot the gradient field of a function using JAX&amp;rsquo;s grad and vmap functions.
 </description>
    </item>
    
    <item>
      <title>Trying polars, a fast DataFrame library</title>
      <link>https://jaese.github.io/posts/trying-polars/</link>
      <pubDate>Tue, 11 Jan 2022 10:43:31 +0900</pubDate>
      
      <guid>https://jaese.github.io/posts/trying-polars/</guid>
      <description>pandas is the de facto standard DataFrame manipulation tool in Python.
Natually, I want to be comfortable using it but, I think the sheer girth of its API is proving to be a major obstacle. I can&amp;rsquo;t go for long before I have to search usages on Stackoverflow for what should be routine tasks. I don&amp;rsquo;t think I can ever grok its date time API.
So, I searched for simpler alternative libraries and found polars.</description>
    </item>
    
    <item>
      <title>Publishing a Jupyter Notebook</title>
      <link>https://jaese.github.io/posts/publishing-jupyter-notebook/</link>
      <pubDate>Tue, 28 Dec 2021 19:31:47 +0900</pubDate>
      
      <guid>https://jaese.github.io/posts/publishing-jupyter-notebook/</guid>
      <description>I wondered if I can publish a rendered Jupyter notebook on my Hugo blog website, in case I have knowledge to share that is in scientific nature..
nb2hugo seems like a good option but it&amp;rsquo;s more involved than pointing to an ipynb file and running a command. So I thought I&amp;rsquo;d use nbconvert instead to convert it to an HTML file and embed it in a post, and have a link on the post that goes to the full page version.</description>
    </item>
    
  </channel>
</rss>
