{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "JO Jaeyoung | 조재영",
  "home_page_url": "https://jaese.github.io/",
  "feed_url": "https://jaese.github.io/feed.json",

"description": "jaese's personal blog",


"author": { "name": "jaese" },

  "items": [
    
  
  
    {
      "id": "https://jaese.github.io/posts/raytracing-ebiten/",
      "title": "Raytracing in One Weekend on Ebiten",
      "content_text": " I am going to profile it to figure out why this version is much slower than the Zig version.\n https://raytracing.github.io/books/RayTracingInOneWeekend.html https://ebiten.org  ",
      "url": "https://jaese.github.io/posts/raytracing-ebiten/",
      "date_published": "2022-02-10T00:00:00Z"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/hello-k3s/",
      "title": "Setting up a K3S cluster",
      "content_text": "I wanted to set up a Kubernetes cluster on my networking lab that consists of three RPis and a PC, and run some actual workload. I used K3S, a lightweight Kubernetes distribution, because it seemed to be the one to go to for running Kubernetes on RPis, ex. Jeff Geerling\u0026rsquo;s video on installing K3S. For image registry, I tried Harbor open source registry v2.4.1. The cluster ingress is fronted by a reverse proxy.",
      "url": "https://jaese.github.io/posts/hello-k3s/",
      "date_published": "2022-02-04T00:00:00Z"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/gemini-protocol/",
      "title": "Gemini: new internet protocol",
      "content_text": "Project Gemini is an early NASA human spacefilght program.\nThe Gemini protocol is a new internet protocol that takes user privacy seriously.\nI came across Gemini when I got distracted and was reading about the Gopher protocol. Gopher was interesting to me because I felt the modern web standards are too complicated. From the app developer\u0026rsquo;s perspective, there are so many things you have to be aware of in order to have a website that uses good practices and also meets stakeholders' tastes.",
      "url": "https://jaese.github.io/posts/gemini-protocol/",
      "date_published": "2022-01-29T00:00:00Z"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/hello-jax/",
      "title": "JAX API",
      "content_text": "Google\u0026rsquo;s JAX autograd library is an example of a neat, composable API. The following is all that is needed to plot the gradient field of a function using JAX\u0026rsquo;s grad and vmap functions.\n ",
      "url": "https://jaese.github.io/posts/hello-jax/",
      "date_published": "2022-01-23T14:58:44Z"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/home-network-v1/",
      "title": "Home network v1",
      "content_text": "It was long overdue I learned the basics of IP networking, and there wouldn\u0026rsquo;t be a better way than to learn it hands-on by setting up my own home network.\nBefore then, I\u0026rsquo;d been using the same WiFi hub installed by the ISP when I moved in. (By the way, if you are using the WiFi hub installed by D\u0026rsquo;Live, be aware that it exposes the configuration UI on port 8080 to the Internet.",
      "url": "https://jaese.github.io/posts/home-network-v1/",
      "date_published": "2022-01-15T15:15:59+09:00"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/cartoons/",
      "title": "A comic strip",
      "content_text": "",
      "url": "https://jaese.github.io/posts/cartoons/",
      "date_published": "2022-01-12T08:25:37+09:00"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/trying-polars/",
      "title": "Trying polars, a fast DataFrame library",
      "content_text": "pandas is the de facto standard DataFrame manipulation tool in Python.\nNatually, I want to be comfortable using it but, I think the sheer girth of its API is proving to be a major obstacle. I can\u0026rsquo;t go for long before I have to search usages on Stackoverflow for what should be routine tasks. I don\u0026rsquo;t think I can ever grok its date time API.\nSo, I searched for simpler alternative libraries and found polars.",
      "url": "https://jaese.github.io/posts/trying-polars/",
      "date_published": "2022-01-11T10:43:31+09:00"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/freebsd-on-rpi4/",
      "title": "FreeBSD on RPi 4",
      "content_text": "As of now, the prebuilt SD card image for RPI (3/4) of FreeBSD 13.0 doesn\u0026rsquo;t run out of the box on RPi 4 due to an issue with the bootloader and requires replacing the bootloader binary on the SD card. If you have a Raspberry PI OS installation and want to try FreeBSD on RPi 4, you can follow these steps:\n  Download and flash FreeBSD-13.0-RELEASE-arm64-aarch64-RPI.img.xz to an SD card.",
      "url": "https://jaese.github.io/posts/freebsd-on-rpi4/",
      "date_published": "2022-01-04T21:11:23+09:00"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/revisiting-the-project-bootstrapping/",
      "title": "Revisiting The Project Bootstrapping",
      "content_text": "Did you know that AVR is one microcontroller family that can be programmed by bit banging by hand? No computers or USB interfacing required, just plain physical, electrical on-and-offs.\nIt\u0026rsquo;s true. The in-system programming (ISP) interface of AVR is concise enough that you can write to its flash memory an upwards of 10 to 20 instructions one bit at a time, with a reasonable amount of patience. In comparison, the JTAG type interface used by ARM and MIPS chips is too fiddly to program by hand, I discovered.",
      "url": "https://jaese.github.io/posts/revisiting-the-project-bootstrapping/",
      "date_published": "2022-01-01T06:47:45+09:00"
    }
  
  , 
    {
      "id": "https://jaese.github.io/posts/publishing-jupyter-notebook/",
      "title": "Publishing a Jupyter Notebook",
      "content_text": "I wondered if I can publish a rendered Jupyter notebook on my Hugo blog website, in case I have knowledge to share that is in scientific nature..\nnb2hugo seems like a good option but it\u0026rsquo;s more involved than pointing to an ipynb file and running a command. So I thought I\u0026rsquo;d use nbconvert instead to convert it to an HTML file and embed it in a post, and have a link on the post that goes to the full page version.",
      "url": "https://jaese.github.io/posts/publishing-jupyter-notebook/",
      "date_published": "2021-12-28T19:31:47+09:00"
    }
  
  ]
}
