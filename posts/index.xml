<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on JO Jaeyoung | 조재영</title>
    <link>https://jaese.github.io/posts/</link>
    <description>Recent content in Posts on JO Jaeyoung | 조재영</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Dec 2021 00:41:28 +0900</lastBuildDate><atom:link href="https://jaese.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello Ebiten</title>
      <link>https://jaese.github.io/posts/hello-ebiten/</link>
      <pubDate>Sat, 25 Dec 2021 00:41:28 +0900</pubDate>
      
      <guid>https://jaese.github.io/posts/hello-ebiten/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Ray Tracing in One Weekend on WebAssembly</title>
      <link>https://jaese.github.io/posts/ray-tracing-in-one-week/</link>
      <pubDate>Sat, 18 Dec 2021 23:01:01 +0900</pubDate>
      
      <guid>https://jaese.github.io/posts/ray-tracing-in-one-week/</guid>
      <description>samples: 
  div.raytracing-content { } canvas { width: 800px; height: 356px; image-rendering: pixelated; image-rendering: crisp-edges; }  import { instantiate } from &#39;/wasm.js&#39;; const width = 320; const height = 180; const samplesElem = document.querySelector(&#39;.samples&#39;); console.log(samplesElem); (async function start() { const memory = new WebAssembly.Memory({initial: 40, maximum: 40}) const importObject = { &#39;env&#39;: { &#39;memory&#39;: memory, }, }; const { instance, module } = await instantiate(&#39;/raytracing.wasm&#39;, importObject); const exports = instance.</description>
    </item>
    
    <item>
      <title>WASM-4 and Zig</title>
      <link>https://jaese.github.io/posts/wasm4/</link>
      <pubDate>Mon, 15 Nov 2021 02:34:44 +0900</pubDate>
      
      <guid>https://jaese.github.io/posts/wasm4/</guid>
      <description>WASM-4 binaries running on browser  *Fancy* graphics   Press R to reset     .wasm4 { padding: 10px; box-sizing: border-box; } #rotating_cube { width: 320px; height: 320px; } #rotating_cube canvas { width: 100%; height: 100%; image-rendering: pixelated; image-rendering: crisp-edges; } #snake { width: 320px; height: 320px; } #snake canvas { width: 100%; height: 100%; image-rendering: pixelated; image-rendering: crisp-edges; }  import { run } from &#34;</description>
    </item>
    
    <item>
      <title>Controlling CO2 sensor and HD44780 LCD display with Raspberry Pi and Go</title>
      <link>https://jaese.github.io/posts/breath-sensor/</link>
      <pubDate>Tue, 09 Nov 2021 18:58:21 +0900</pubDate>
      
      <guid>https://jaese.github.io/posts/breath-sensor/</guid>
      <description>This is a digital gas sensor (CCS811) and an LCD display (HD44780), controlled by Raspberry Pi, that I wired together back in 2019. The CS811 sensor reports two values: &amp;lsquo;equivalent carbon dioxide&amp;rsquo; (eCO2), and &amp;lsquo;Volatile Organic Compounds&amp;rsquo; (VOC), PPM. I am not too sure what those terms mean, not strong on chemistry, but nonetheless I wired it to display the reported values on LCD display continuously. I assume high values mean bad.</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>https://jaese.github.io/posts/hello/</link>
      <pubDate>Fri, 05 Nov 2021 10:58:03 +0900</pubDate>
      
      <guid>https://jaese.github.io/posts/hello/</guid>
      <description>My first post.</description>
    </item>
    
  </channel>
</rss>
